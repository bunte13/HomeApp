@model IEnumerable<HomeApp.Models.UserItem>

@{
    ViewData["Title"] = "Your Cart";
}

<h1>Your Cart</h1>

<div class="row mt-4">
    @foreach (var item in Model)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                <div class="card-img-wrapper">
                    <img src="@Html.DisplayFor(modelItem => item.Item.PictureJPG)" class="card-img-top" alt="">
                </div>
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Item.Name)</h5>
                    <ul class="list-group list-group-flush infos">
                        <li class="list-group-item">Supplier: @Html.DisplayFor(modelItem => item.Item.Supplier.Name)</li>
                        <li class="list-group-item">Quantity: @item.Quantity</li>
                        <li class="list-group-item">Price per unit: $@item.Item.Price</li>
                        <li class="list-group-item">
                            Genres:
                            @foreach (var genre in item.Item.CategoryItems)
                            {
                                <span>@genre.Category.CatgoryName</span>
                                if (!genre.Equals(item.Item.CategoryItems.Last()))
                                {
                                    <span>, </span>
                                }
                            }
                        </li>
                    </ul>
                </div>
                <div class="card-footer">
                    <div class="button-container">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div>
                                @if (User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                }
                                else if (!User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-outline-dark" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                    <a class="btn btn-outline-dark" asp-action="Details" asp-controller="Items" asp-route-id="@item.Item.Id">View</a>
                                    <a asp-controller="Reviews" asp-action="Create" asp-route-id="@item.Item.Id" class="btn btn-outline-info">Add Review</a>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="mt-4">
    
    <p>
        @{
            decimal totalPrice = 0;
            foreach (var item in Model)
            {
                // Ensure item.Item is not null and item.Quantity is greater than 0
                if (item.Item != null && item.Quantity > 0)
                {
                    totalPrice += item.Quantity * item.Item.Price;
                }
            }
        }
        @if (totalPrice > 0)
        {
            <h3><span> total price: @totalPrice.ToString("C") </span></h3>
        }
        else
        {
            <h3><span>No items available</span></h3>
        }
    </p>
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Add smooth transition class to cards when filter button is clicked
            $("#filterButton").click(function () {
                $(".card").addClass("smooth-transition");
            });
        });
    </script>
}

<style>
    .card {
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        display: flex;
        flex-direction: column;
        cursor: pointer;
        background-color: #D3E4E8;
    }

    .list-group-item {
        background-color: #D3E4E8; /* or any color you want */
    }

    .card-img-top {
        width: 100%;
        height: 400px;
        max-height: 400px;
        object-fit: cover;
    }

    .card:hover {
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transform: scale(1.04);
    }

    .card.smooth-transition {
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
</style>
